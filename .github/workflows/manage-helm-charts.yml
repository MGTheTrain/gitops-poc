name: Manage helm charts

on:
  workflow_dispatch:
    inputs:
      INFRASTRUCTURE_OPERATION:
        type: choice
        options: [ 'install-helm-charts', 'uninstall-helm-charts' ]
        default: install-helm-charts
        description: 'Infrastructure operation'
      GITOPS_TOOL:
        type: choice
        options: [ 'argocd', 'fluxcd' ]
        default: 
        description: 'Select GitOps tool: [ argocd, fluxcd ]'
      ENVIRONMENT:
        type: choice
        options: [ 'sbx' ]
        default: sbx
        description: 'Environment on which to deploy: [ sbx ]. Dev, staging, prod environments not considered'

env:
  ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
  ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'
  ARM_CLIENT_ID: '${{ secrets.ARM_CLIENT_ID }}'
  ARM_CLIENT_SECRET: '${{ secrets.ARM_CLIENT_SECRET }}'

jobs:
  install-helm-charts:
    runs-on: ubuntu-latest
    if: ${{ inputs.INFRASTRUCTURE_OPERATION == 'install-helm-charts' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  

      - name: Download the ~/.kube/config
        shell: bash
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=gftfbesbxsa001" \
          -backend-config="resource_group_name=gftfbe-sbx-rg001" \
          -backend-config="container_name=gftfbesbxsac001" \
          -backend-config="key=${{ inputs.ENVIRONMENT }}-k8s-deployment/terraform.tfstate"

          terraform output aks_kube_config_list | awk '/^  apiVersion:/,/^  EOT,$/' | sed 's/^  //' > ./config
          mkdir -vp ~/.kube
          head -n -3 ./config > ~/.kube/config
          cat ~/.kube/config
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}-k8s-deployment

      - name: Terraform Init # requires a Storage Account backend deployed trough storage-account-backend-deploy workflow step
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=gftfbesbxsa001" \
          -backend-config="resource_group_name=gftfbe-sbx-rg001" \
          -backend-config="container_name=gftfbesbxsac001" \
          -backend-config="key=${{ inputs.ENVIRONMENT }}-k8s-configuration-for-external-helm-charts/terraform.tfstate"
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}-k8s-configuration

      - name: Install helm charts
        shell: bash
        run: terraform apply --auto-approve
        continue-on-error: false
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}-k8s-configuration
        env:
          TF_VAR_gitops_tool: "${{ inputs.GITOPS_TOOL }}"
          TF_VAR_selected_configuration: external-helm

  uninstall-helm-charts:
    runs-on: ubuntu-latest
    if: ${{ inputs.INFRASTRUCTURE_OPERATION == 'uninstall-helm-charts' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  

      - name: Download the ~/.kube/config
        shell: bash
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=gftfbesbxsa001" \
          -backend-config="resource_group_name=gftfbe-sbx-rg001" \
          -backend-config="container_name=gftfbesbxsac001" \
          -backend-config="key=${{ inputs.ENVIRONMENT }}-k8s-deployment/terraform.tfstate"

          terraform output aks_kube_config_list | awk '/^  apiVersion:/,/^  EOT,$/' | sed 's/^  //' > ./config
          mkdir -vp ~/.kube
          head -n -3 ./config > ~/.kube/config
          cat ~/.kube/config
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}-k8s-deployment

      - name: Terraform Init # requires a Storage Account backend deployed trough storage-account-backend-deploy workflow step
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=gftfbesbxsa001" \
          -backend-config="resource_group_name=gftfbe-sbx-rg001" \
          -backend-config="container_name=gftfbesbxsac001" \
          -backend-config="key=${{ inputs.ENVIRONMENT }}-k8s-configuration-for-external-helm-charts/terraform.tfstate"
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}-k8s-configuration

      - name: Uninstall helm charts
        run: terraform destroy --auto-approve
        continue-on-error: false
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}-k8s-configuration
        env:
          TF_VAR_selected_configuration: external-helm